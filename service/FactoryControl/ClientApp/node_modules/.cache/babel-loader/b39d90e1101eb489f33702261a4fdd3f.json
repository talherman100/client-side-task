{"ast":null,"code":"import React,{useContext}from'react';import{BaseConfig}from'../config/AppConfig';import{WebSocketContext}from'../context/WebSocket';import{FactoryService}from'../services/service';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export function WebSocketMonitoring(){var _useContext=useContext(WebSocketContext),wsState=_useContext.wsState,connectWs=_useContext.connectWs,closeWs=_useContext.closeWs;return/*#__PURE__*/_jsx(\"div\",{className:\"\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"stickyTop\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"siteTitle\",children:\"Nanox\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"topButtons\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"connectionButtons\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"connectionBtn btn-primary\",disabled:BaseConfig.webSocketState.CLOSED!==wsState&&BaseConfig.webSocketState.NOTCONNECTED!==wsState,onClick:function onClick(){connectWs();},children:\"Start Connection\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"connectionBtn\",disabled:BaseConfig.webSocketState.OPEN!==wsState,onClick:function onClick(){closeWs();},children:\"End Connection\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"connectionBtn\",style:{backgroundColor:'red',color:'white'},onClick:function onClick(){FactoryService.CloseAll();},children:\"End All Connections\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"connectionBoxContainer\",children:wsState===BaseConfig.webSocketState.OPEN?/*#__PURE__*/_jsx(\"div\",{className:\"connectionOpenBox\",children:\" \"}):/*#__PURE__*/_jsx(\"div\",{className:\"connectionCloseBox\",children:\" \"})})]})]})});}","map":{"version":3,"sources":["C:/Users/טל/Desktop/dotnet-react-web-socket-main/factory-control/ui/src/components/WebSocketMonitoring.js"],"names":["React","useContext","BaseConfig","WebSocketContext","FactoryService","WebSocketMonitoring","wsState","connectWs","closeWs","webSocketState","CLOSED","NOTCONNECTED","OPEN","backgroundColor","color","CloseAll"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,KAAkC,OAAlC,CACA,OAASC,UAAT,KAA2B,qBAA3B,CACA,OAASC,gBAAT,KAAiC,sBAAjC,CACA,OAASC,cAAT,KAA+B,qBAA/B,C,wFAEA,MAAO,SAASC,CAAAA,mBAAT,EAA+B,CACpC,gBAAwCJ,UAAU,CAACE,gBAAD,CAAlD,CAAQG,OAAR,aAAQA,OAAR,CAAiBC,SAAjB,aAAiBA,SAAjB,CAA4BC,OAA5B,aAA4BA,OAA5B,CACA,mBACE,YAAK,SAAS,CAAC,EAAf,uBACE,aAAK,SAAS,CAAC,WAAf,wBACE,YAAK,SAAS,CAAC,WAAf,mBADF,cAEE,aAAK,SAAS,CAAC,YAAf,wBACE,aAAK,SAAS,CAAC,mBAAf,wBACE,eACE,IAAI,CAAC,QADP,CAEE,SAAS,CAAC,2BAFZ,CAGE,QAAQ,CAAEN,UAAU,CAACO,cAAX,CAA0BC,MAA1B,GAAqCJ,OAArC,EAAgDJ,UAAU,CAACO,cAAX,CAA0BE,YAA1B,GAA2CL,OAHvG,CAIE,OAAO,CAAE,kBAAM,CAAEC,SAAS,GAAK,CAJjC,8BADF,cASE,eACE,IAAI,CAAC,QADP,CAEE,SAAS,CAAC,eAFZ,CAGE,QAAQ,CAAEL,UAAU,CAACO,cAAX,CAA0BG,IAA1B,GAAmCN,OAH/C,CAIE,OAAO,CAAE,kBAAM,CAAEE,OAAO,GAAK,CAJ/B,4BATF,cAiBE,eACE,IAAI,CAAC,QADP,CAEE,SAAS,CAAC,eAFZ,CAGE,KAAK,CAAE,CAAEK,eAAe,CAAE,KAAnB,CAA0BC,KAAK,CAAE,OAAjC,CAHT,CAIE,OAAO,CAAE,kBAAM,CAAEV,cAAc,CAACW,QAAf,GAA4B,CAJ/C,iCAjBF,GADF,cA2BE,YAAK,SAAS,CAAC,wBAAf,UACIT,OAAO,GAAKJ,UAAU,CAACO,cAAX,CAA0BG,IAAvC,cACC,YAAK,SAAS,CAAC,mBAAf,eADD,cAGC,YAAK,SAAS,CAAC,oBAAf,eAJJ,EA3BF,GAFF,GADF,EADF,CA2CD","sourcesContent":["import React, { useContext } from 'react';\nimport { BaseConfig } from '../config/AppConfig';\nimport { WebSocketContext } from '../context/WebSocket';\nimport { FactoryService } from '../services/service';\n\nexport function WebSocketMonitoring() {\n  const { wsState, connectWs, closeWs } = useContext(WebSocketContext);\n  return (\n    <div className=\"\">\n      <div className=\"stickyTop\">\n        <div className=\"siteTitle\">Nanox</div>\n        <div className=\"topButtons\">\n          <div className=\"connectionButtons\">\n            <button\n              type=\"button\"\n              className=\"connectionBtn btn-primary\"\n              disabled={BaseConfig.webSocketState.CLOSED !== wsState && BaseConfig.webSocketState.NOTCONNECTED !== wsState}\n              onClick={() => { connectWs(); }}\n            >\n              Start Connection\n            </button>\n            <button\n              type=\"button\"\n              className=\"connectionBtn\"\n              disabled={BaseConfig.webSocketState.OPEN !== wsState}\n              onClick={() => { closeWs(); }}\n            >\n              End Connection\n            </button>\n            <button\n              type=\"button\"\n              className=\"connectionBtn\"\n              style={{ backgroundColor: 'red', color: 'white' }}\n              onClick={() => { FactoryService.CloseAll(); }}\n            >\n              End All Connections\n            </button>\n          </div>\n          <div className=\"connectionBoxContainer\">\n            {(wsState === BaseConfig.webSocketState.OPEN) ?\n              <div className=\"connectionOpenBox\"> </div>\n              :\n              <div className=\"connectionCloseBox\"> </div>\n            }\n          </div>\n        </div>\n      </div>\n    </div>\n\n  );\n}\n"]},"metadata":{},"sourceType":"module"}