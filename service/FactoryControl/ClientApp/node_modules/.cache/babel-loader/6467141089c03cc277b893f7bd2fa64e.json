{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05D8\\u05DC\\\\Desktop\\\\dotnet-react-web-socket-main\\\\factory-control\\\\ui\\\\src\\\\components\\\\FactoryList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect } from 'react';\nimport { Col, Container, Row } from 'react-bootstrap';\nimport { FactoryCard } from './FactoryCard';\nimport { WebSocketContext } from '../context/WebSocket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function FactoryList() {\n  _s();\n\n  const {\n    factoryList\n  } = useContext(WebSocketContext);\n  useEffect(() => {\n    console.log('factoryList');\n    console.log(factoryList);\n  }, [factoryList]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-100 d-flex flex-row justify-content-center align-items-center\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: Array.isArray(factoryList) && factoryList.reduce((accumulator, currentValue, currentIndex, array) => {\n        if (currentIndex % 3 === 0) {\n          accumulator.push(array.slice(currentIndex, currentIndex + 3));\n        }\n\n        return accumulator;\n      }, []).map((element, index) => /*#__PURE__*/_jsxDEV(Row, {\n        className: \"my-5\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(FactoryCard, {\n            id: element[0].Id,\n            name: element[0].Name,\n            state: element[0].Status,\n            message: element[0].Message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(FactoryCard, {\n            id: element[1].Id,\n            name: element[1].Name,\n            state: element[1].Status,\n            message: element[1].Message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(FactoryCard, {\n            id: element[2].Id,\n            name: element[2].Name,\n            state: element[2].Status,\n            message: element[2].Message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FactoryList, \"92E/agMq9LD0yZLAxnSZbnGfr18=\");\n\n_c = FactoryList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FactoryList\");","map":{"version":3,"sources":["C:/Users/טל/Desktop/dotnet-react-web-socket-main/factory-control/ui/src/components/FactoryList.js"],"names":["React","useContext","useEffect","Col","Container","Row","FactoryCard","WebSocketContext","FactoryList","factoryList","console","log","Array","isArray","reduce","accumulator","currentValue","currentIndex","array","push","slice","map","element","index","Id","Name","Status","Message"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,SAASC,GAAT,EAAcC,SAAd,EAAyBC,GAAzB,QAAoC,iBAApC;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,gBAAT,QAAiC,sBAAjC;;AAEA,OAAO,SAASC,WAAT,GAAuB;AAAA;;AAC5B,QAAM;AAAEC,IAAAA;AAAF,MAAkBR,UAAU,CAACM,gBAAD,CAAlC;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AACD,GAHQ,EAGN,CAACA,WAAD,CAHM,CAAT;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,iEAAf;AAAA,2BACE,QAAC,SAAD;AAAA,gBAEMG,KAAK,CAACC,OAAN,CAAcJ,WAAd,KACAA,WAAW,CAACK,MAAZ,CAAmB,CAACC,WAAD,EAAcC,YAAd,EAA4BC,YAA5B,EAA0CC,KAA1C,KAAoD;AACrE,YAAID,YAAY,GAAG,CAAf,KAAqB,CAAzB,EAA4B;AAC1BF,UAAAA,WAAW,CAACI,IAAZ,CAAiBD,KAAK,CAACE,KAAN,CAAYH,YAAZ,EAA0BA,YAAY,GAAG,CAAzC,CAAjB;AACD;;AACD,eAAOF,WAAP;AACD,OALD,EAKG,EALH,EAKOM,GALP,CAKW,CAACC,OAAD,EAAUC,KAAV,kBACT,QAAC,GAAD;AAAiB,QAAA,SAAS,EAAC,MAA3B;AAAA,gCACE,QAAC,GAAD;AAAA,iCAAK,QAAC,WAAD;AAAa,YAAA,EAAE,EAAED,OAAO,CAAC,CAAD,CAAP,CAAWE,EAA5B;AAAgC,YAAA,IAAI,EAAEF,OAAO,CAAC,CAAD,CAAP,CAAWG,IAAjD;AAAuD,YAAA,KAAK,EAAEH,OAAO,CAAC,CAAD,CAAP,CAAWI,MAAzE;AAAiF,YAAA,OAAO,EAAEJ,OAAO,CAAC,CAAD,CAAP,CAAWK;AAArG;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,GAAD;AAAA,iCAAK,QAAC,WAAD;AAAa,YAAA,EAAE,EAAEL,OAAO,CAAC,CAAD,CAAP,CAAWE,EAA5B;AAAgC,YAAA,IAAI,EAAEF,OAAO,CAAC,CAAD,CAAP,CAAWG,IAAjD;AAAuD,YAAA,KAAK,EAAEH,OAAO,CAAC,CAAD,CAAP,CAAWI,MAAzE;AAAiF,YAAA,OAAO,EAAEJ,OAAO,CAAC,CAAD,CAAP,CAAWK;AAArG;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,GAAD;AAAA,iCAAK,QAAC,WAAD;AAAa,YAAA,EAAE,EAAEL,OAAO,CAAC,CAAD,CAAP,CAAWE,EAA5B;AAAgC,YAAA,IAAI,EAAEF,OAAO,CAAC,CAAD,CAAP,CAAWG,IAAjD;AAAuD,YAAA,KAAK,EAAEH,OAAO,CAAC,CAAD,CAAP,CAAWI,MAAzE;AAAiF,YAAA,OAAO,EAAEJ,OAAO,CAAC,CAAD,CAAP,CAAWK;AAArG;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA,SAAUJ,KAAV;AAAA;AAAA;AAAA;AAAA,cANF;AAHN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GA7Bef,W;;KAAAA,W","sourcesContent":["import React, { useContext, useEffect } from 'react';\nimport { Col, Container, Row } from 'react-bootstrap';\nimport { FactoryCard } from './FactoryCard';\nimport { WebSocketContext } from '../context/WebSocket';\n\nexport function FactoryList() {\n  const { factoryList } = useContext(WebSocketContext);\n\n  useEffect(() => {\n    console.log('factoryList');\n    console.log(factoryList);\n  }, [factoryList]);\n\n  return (\n    <div className=\"h-100 d-flex flex-row justify-content-center align-items-center\">\n      <Container>\n        {\n            Array.isArray(factoryList) &&\n            factoryList.reduce((accumulator, currentValue, currentIndex, array) => {\n              if (currentIndex % 3 === 0) {\n                accumulator.push(array.slice(currentIndex, currentIndex + 3));\n              }\n              return accumulator;\n            }, []).map((element, index) => (\n              <Row key={index} className=\"my-5\">\n                <Col><FactoryCard id={element[0].Id} name={element[0].Name} state={element[0].Status} message={element[0].Message} /></Col>\n                <Col><FactoryCard id={element[1].Id} name={element[1].Name} state={element[1].Status} message={element[1].Message} /></Col>\n                <Col><FactoryCard id={element[2].Id} name={element[2].Name} state={element[2].Status} message={element[2].Message} /></Col>\n              </Row>\n            ))\n        }\n      </Container>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}