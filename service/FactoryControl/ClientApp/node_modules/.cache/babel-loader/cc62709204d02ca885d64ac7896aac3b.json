{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05D8\\u05DC\\\\Desktop\\\\dotnet-react-web-socket-main\\\\factory-control\\\\ui\\\\src\\\\components\\\\PhotoUpdateModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button, Form, Modal } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { FactoryService } from '../services/service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function PhotoUpdateModal(_ref) {\n  _s();\n\n  let {\n    show,\n    onClose,\n    title,\n    data\n  } = _ref;\n  const [formData, setFormData] = useState(data);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: show,\n    onHide: () => {\n      setFormData(data);\n      onClose();\n    },\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"exampleForm.ControlInput1\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"New Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Type a message...\",\n            onChange: event => {\n              setFormData({ ...formData,\n                message: event.target.value\n              });\n            },\n            value: formData.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        onClick: () => {\n          setFormData(data);\n          onClose();\n        },\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: () => {\n          FactoryService.Update({ ...formData\n          });\n        },\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PhotoUpdateModal, \"5Xe+7XVdvjRG1GlUIKpskI5oi0Y=\");\n\n_c = PhotoUpdateModal;\nPhotoUpdateModal.propTypes = {\n  show: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  title: PropTypes.string.isRequired,\n  data: PropTypes.object.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"PhotoUpdateModal\");","map":{"version":3,"sources":["C:/Users/טל/Desktop/dotnet-react-web-socket-main/factory-control/ui/src/components/PhotoUpdateModal.js"],"names":["React","useState","Button","Form","Modal","PropTypes","FactoryService","PhotoUpdateModal","show","onClose","title","data","formData","setFormData","event","message","target","value","Update","propTypes","bool","isRequired","func","string","object"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,iBAApC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,cAAT,QAA+B,qBAA/B;;AAEA,OAAO,SAASC,gBAAT,OAA0D;AAAA;;AAAA,MAAhC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA,KAAjB;AAAwBC,IAAAA;AAAxB,GAAgC;AAC/D,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAACU,IAAD,CAAxC;AAEA,sBACE,QAAC,KAAD;AAAO,IAAA,IAAI,EAAEH,IAAb;AAAmB,IAAA,MAAM,EAAE,MAAM;AAAEK,MAAAA,WAAW,CAACF,IAAD,CAAX;AAAmBF,MAAAA,OAAO;AAAK,KAAlE;AAAA,4BACE,QAAC,KAAD,CAAO,MAAP;AAAc,MAAA,WAAW,MAAzB;AAAA,6BACE,QAAC,KAAD,CAAO,KAAP;AAAA,kBAAcC;AAAd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,KAAD,CAAO,IAAP;AAAA,6BACE,QAAC,IAAD;AAAA,+BACE,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,SAAS,EAAC,MAAtB;AAA6B,UAAA,SAAS,EAAC,2BAAvC;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,WAAW,EAAC,mBAFd;AAGE,YAAA,QAAQ,EAAEI,KAAK,IAAI;AAAED,cAAAA,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeG,gBAAAA,OAAO,EAAED,KAAK,CAACE,MAAN,CAAaC;AAArC,eAAD,CAAX;AAA4D,aAHnF;AAIE,YAAA,KAAK,EAAEL,QAAQ,CAACG;AAJlB;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJF,eAiBE,QAAC,KAAD,CAAO,MAAP;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,OAAO,EAAE,MAAM;AAAEF,UAAAA,WAAW,CAACF,IAAD,CAAX;AAAmBF,UAAAA,OAAO;AAAK,SAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,SAAhB;AAA0B,QAAA,OAAO,EAAE,MAAM;AAAEH,UAAAA,cAAc,CAACY,MAAf,CAAsB,EAAE,GAAGN;AAAL,WAAtB;AAAyC,SAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD;;GA/BeL,gB;;KAAAA,gB;AAiChBA,gBAAgB,CAACY,SAAjB,GAA6B;AAC3BX,EAAAA,IAAI,EAAEH,SAAS,CAACe,IAAV,CAAeC,UADM;AAE3BZ,EAAAA,OAAO,EAAEJ,SAAS,CAACiB,IAAV,CAAeD,UAFG;AAG3BX,EAAAA,KAAK,EAAEL,SAAS,CAACkB,MAAV,CAAiBF,UAHG;AAI3BV,EAAAA,IAAI,EAAEN,SAAS,CAACmB,MAAV,CAAiBH;AAJI,CAA7B","sourcesContent":["import React, { useState } from 'react';\nimport { Button, Form, Modal } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { FactoryService } from '../services/service';\n\nexport function PhotoUpdateModal({ show, onClose, title, data }) {\n  const [formData, setFormData] = useState(data);\n\n  return (\n    <Modal show={show} onHide={() => { setFormData(data); onClose(); }}>\n      <Modal.Header closeButton>\n        <Modal.Title>{title}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form>\n          <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n            <Form.Label>New Description</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Type a message...\"\n              onChange={event => { setFormData({ ...formData, message: event.target.value }); }}\n              value={formData.message}\n            />\n          </Form.Group>\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={() => { setFormData(data); onClose(); }}>\n          Close\n        </Button>\n        <Button variant=\"primary\" onClick={() => { FactoryService.Update({ ...formData }); }}>\n          Save\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nPhotoUpdateModal.propTypes = {\n  show: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  title: PropTypes.string.isRequired,\n  data: PropTypes.object.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}