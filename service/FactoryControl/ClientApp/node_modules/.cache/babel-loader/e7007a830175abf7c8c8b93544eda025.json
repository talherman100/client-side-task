{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\\\u05D8\\u05DC\\\\Desktop\\\\dotnet-react-web-socket-main\\\\factory-control\\\\ui\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";/* eslint-disable react/jsx-no-constructed-context-values */import React,{useRef,useState}from'react';import{BaseConfig}from'../config/AppConfig';import{jsx as _jsx}from\"react/jsx-runtime\";var WebSocketContext=/*#__PURE__*/React.createContext();var WebSocketConsumer=WebSocketContext.Consumer;function WebSocketProvider(_ref){var children=_ref.children;var _useState=useState(BaseConfig.webSocketState.NOTCONNECTED),_useState2=_slicedToArray(_useState,2),wsState=_useState2[0],setWsState=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),photoList=_useState4[0],setPhotoList=_useState4[1];var _useState5=useState(10),_useState6=_slicedToArray(_useState5,2),currentGroup=_useState6[0],setCurrentGroup=_useState6[1];var wsRef=useRef();// start web socket connection in this function\nvar connectWs=function connectWs(){setWsState(BaseConfig.webSocketState.CONNECTING);wsRef.current=new WebSocket(BaseConfig.wsUrl);wsRef.current.onopen=function(){console.log('socket open');setWsState(BaseConfig.webSocketState.OPEN);};wsRef.current.onmessage=function(e){console.log('message');console.log(e.data);setPhotoList(JSON.parse(e.data));};wsRef.current.onclose=function(){console.log('socket closed by server');setWsState(BaseConfig.webSocketState.CLOSED);};};var closeWs=function closeWs(){setCurrentGroup(10);wsRef.current.close();console.log('socket closed by client');setWsState(BaseConfig.webSocketState.CLOSED);};return/*#__PURE__*/_jsx(WebSocketContext.Provider,{value:{connectWs:connectWs,closeWs:closeWs,wsState:wsState,photoList:photoList,currentGroup:currentGroup},children:children});}export{WebSocketContext,WebSocketConsumer,WebSocketProvider};","map":{"version":3,"sources":["C:/Users/טל/Desktop/dotnet-react-web-socket-main/factory-control/ui/src/context/WebSocket.js"],"names":["React","useRef","useState","BaseConfig","WebSocketContext","createContext","WebSocketConsumer","Consumer","WebSocketProvider","children","webSocketState","NOTCONNECTED","wsState","setWsState","photoList","setPhotoList","currentGroup","setCurrentGroup","wsRef","connectWs","CONNECTING","current","WebSocket","wsUrl","onopen","console","log","OPEN","onmessage","e","data","JSON","parse","onclose","CLOSED","closeWs","close"],"mappings":"+KAAA,4DACA,MAAOA,CAAAA,KAAP,EAAgBC,MAAhB,CAAwBC,QAAxB,KAAwC,OAAxC,CAEA,OAASC,UAAT,KAA2B,qBAA3B,C,2CAEA,GAAMC,CAAAA,gBAAgB,cAAGJ,KAAK,CAACK,aAAN,EAAzB,CACA,GAAMC,CAAAA,iBAAiB,CAAGF,gBAAgB,CAACG,QAA3C,CAEA,QAASC,CAAAA,iBAAT,MAAyC,IAAZC,CAAAA,QAAY,MAAZA,QAAY,CACvC,cAA8BP,QAAQ,CAACC,UAAU,CAACO,cAAX,CAA0BC,YAA3B,CAAtC,wCAAOC,OAAP,eAAgBC,UAAhB,eACA,eAAkCX,QAAQ,CAAC,EAAD,CAA1C,yCAAOY,SAAP,eAAkBC,YAAlB,eACA,eAAwCb,QAAQ,CAAC,EAAD,CAAhD,yCAAOc,YAAP,eAAqBC,eAArB,eAEA,GAAMC,CAAAA,KAAK,CAAGjB,MAAM,EAApB,CAEA;AACA,GAAMkB,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACtBN,UAAU,CAACV,UAAU,CAACO,cAAX,CAA0BU,UAA3B,CAAV,CACAF,KAAK,CAACG,OAAN,CAAgB,GAAIC,CAAAA,SAAJ,CAAcnB,UAAU,CAACoB,KAAzB,CAAhB,CAEAL,KAAK,CAACG,OAAN,CAAcG,MAAd,CAAuB,UAAM,CAC3BC,OAAO,CAACC,GAAR,CAAY,aAAZ,EACAb,UAAU,CAACV,UAAU,CAACO,cAAX,CAA0BiB,IAA3B,CAAV,CACD,CAHD,CAKAT,KAAK,CAACG,OAAN,CAAcO,SAAd,CAA0B,SAAAC,CAAC,CAAI,CAC7BJ,OAAO,CAACC,GAAR,CAAY,SAAZ,EACAD,OAAO,CAACC,GAAR,CAAYG,CAAC,CAACC,IAAd,EACAf,YAAY,CAACgB,IAAI,CAACC,KAAL,CAAWH,CAAC,CAACC,IAAb,CAAD,CAAZ,CACD,CAJD,CAMAZ,KAAK,CAACG,OAAN,CAAcY,OAAd,CAAwB,UAAM,CAC5BR,OAAO,CAACC,GAAR,CAAY,yBAAZ,EACAb,UAAU,CAACV,UAAU,CAACO,cAAX,CAA0BwB,MAA3B,CAAV,CACD,CAHD,CAID,CAnBD,CAqBA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CACpBlB,eAAe,CAAC,EAAD,CAAf,CACAC,KAAK,CAACG,OAAN,CAAce,KAAd,GACAX,OAAO,CAACC,GAAR,CAAY,yBAAZ,EACAb,UAAU,CAACV,UAAU,CAACO,cAAX,CAA0BwB,MAA3B,CAAV,CACD,CALD,CAOA,mBACE,KAAC,gBAAD,CAAkB,QAAlB,EAA2B,KAAK,CAAE,CAAEf,SAAS,CAATA,SAAF,CAAagB,OAAO,CAAPA,OAAb,CAAsBvB,OAAO,CAAPA,OAAtB,CAA+BE,SAAS,CAATA,SAA/B,CAA0CE,YAAY,CAAZA,YAA1C,CAAlC,UACGP,QADH,EADF,CAKD,CAMD,OAASL,gBAAT,CAA2BE,iBAA3B,CAA8CE,iBAA9C","sourcesContent":["/* eslint-disable react/jsx-no-constructed-context-values */\nimport React, { useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { BaseConfig } from '../config/AppConfig';\n\nconst WebSocketContext = React.createContext();\nconst WebSocketConsumer = WebSocketContext.Consumer;\n\nfunction WebSocketProvider({ children }) {\n  const [wsState, setWsState] = useState(BaseConfig.webSocketState.NOTCONNECTED);\n  const [photoList, setPhotoList] = useState([]);\n  const [currentGroup, setCurrentGroup] = useState(10);\n\n  const wsRef = useRef();\n\n  // start web socket connection in this function\n  const connectWs = () => {\n    setWsState(BaseConfig.webSocketState.CONNECTING);\n    wsRef.current = new WebSocket(BaseConfig.wsUrl);\n\n    wsRef.current.onopen = () => {\n      console.log('socket open');\n      setWsState(BaseConfig.webSocketState.OPEN);\n    };\n\n    wsRef.current.onmessage = e => {\n      console.log('message');\n      console.log(e.data);\n      setPhotoList(JSON.parse(e.data));\n    };\n\n    wsRef.current.onclose = () => {\n      console.log('socket closed by server');\n      setWsState(BaseConfig.webSocketState.CLOSED);\n    };\n  };\n\n  const closeWs = () => {\n    setCurrentGroup(10);\n    wsRef.current.close();\n    console.log('socket closed by client');\n    setWsState(BaseConfig.webSocketState.CLOSED);\n  };\n\n  return (\n    <WebSocketContext.Provider value={{ connectWs, closeWs, wsState, photoList, currentGroup }}>\n      {children}\n    </WebSocketContext.Provider>\n  );\n}\n\nWebSocketProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport { WebSocketContext, WebSocketConsumer, WebSocketProvider };\n"]},"metadata":{},"sourceType":"module"}