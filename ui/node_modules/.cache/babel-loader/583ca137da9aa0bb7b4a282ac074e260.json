{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05D8\\u05DC\\\\Desktop\\\\dotnet-react-web-socket-main\\\\factory-control\\\\ui\\\\src\\\\components\\\\PhotoCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button, Card } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { PhotoUpdateModal } from './PhotoUpdateModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function PhotoCard(_ref) {\n  _s();\n\n  let {\n    albumId,\n    id,\n    title,\n    url,\n    thumbnailUrl\n  } = _ref;\n  const [showModal, setShowModal] = useState(false);\n  const [showTitle, setShowTitle] = useState(true);\n\n  const onClickImage = () => {\n    setShowTitle(!showTitle);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cardContainer\",\n    tabIndex: 0,\n    role: \"button\",\n    onClick: onClickImage,\n    onKeyDown: onClickImage,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cardInner\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"cardImg\",\n        src: url,\n        alt: \"BigCo Inc. logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), showTitle && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(PhotoUpdateModal, {\n        show: showModal,\n        onClose: () => {\n          setShowModal(false);\n        },\n        title: `${title} - Update`,\n        data: {\n          albumId,\n          title,\n          id,\n          thumbnailUrl,\n          url\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"updateBtn\",\n        variant: \"primary\",\n        onClick: () => {\n          setShowModal(true);\n        },\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PhotoCard, \"GLArsTXLOIPQkQalmB2OkH4pfE8=\");\n\n_c = PhotoCard;\nPhotoCard.propTypes = {\n  albumId: PropTypes.number.isRequired,\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  thumbnailUrl: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"PhotoCard\");","map":{"version":3,"sources":["C:/Users/טל/Desktop/dotnet-react-web-socket-main/factory-control/ui/src/components/PhotoCard.js"],"names":["React","useState","Button","Card","PropTypes","PhotoUpdateModal","PhotoCard","albumId","id","title","url","thumbnailUrl","showModal","setShowModal","showTitle","setShowTitle","onClickImage","propTypes","number","isRequired","string"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,iBAA7B;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,gBAAT,QAAiC,oBAAjC;;AAEA,OAAO,SAASC,SAAT,OAA8D;AAAA;;AAAA,MAA3C;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,EAAX;AAAeC,IAAAA,KAAf;AAAsBC,IAAAA,GAAtB;AAA2BC,IAAAA;AAA3B,GAA2C;AACnE,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,IAAD,CAA1C;;AAEA,QAAMe,YAAY,GAAG,MAAM;AACzBD,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACD,GAFD;;AAGA,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAA+B,IAAA,QAAQ,EAAE,CAAzC;AAA4C,IAAA,IAAI,EAAC,QAAjD;AAA0D,IAAA,OAAO,EAAEE,YAAnE;AAAiF,IAAA,SAAS,EAAEA,YAA5F;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAyB,QAAA,GAAG,EAAEN,GAA9B;AAAmC,QAAA,GAAG,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA,cADF,EAEGI,SAAS,iBAAI;AAAA,kBAAML;AAAN;AAAA;AAAA;AAAA;AAAA,cAFhB,eAGE,QAAC,gBAAD;AACE,QAAA,IAAI,EAAEG,SADR;AAEE,QAAA,OAAO,EAAE,MAAM;AAAEC,UAAAA,YAAY,CAAC,KAAD,CAAZ;AAAsB,SAFzC;AAGE,QAAA,KAAK,EAAG,GAAEJ,KAAM,WAHlB;AAIE,QAAA,IAAI,EAAE;AAAEF,UAAAA,OAAF;AAAWE,UAAAA,KAAX;AAAkBD,UAAAA,EAAlB;AAAsBG,UAAAA,YAAtB;AAAoCD,UAAAA;AAApC;AAJR;AAAA;AAAA;AAAA;AAAA,cAHF,eASE,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,WAAlB;AAA8B,QAAA,OAAO,EAAC,SAAtC;AAAgD,QAAA,OAAO,EAAE,MAAM;AAAEG,UAAAA,YAAY,CAAC,IAAD,CAAZ;AAAqB,SAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GAvBeP,S;;KAAAA,S;AAyBhBA,SAAS,CAACW,SAAV,GAAsB;AACpBV,EAAAA,OAAO,EAAEH,SAAS,CAACc,MAAV,CAAiBC,UADN;AAEpBX,EAAAA,EAAE,EAAEJ,SAAS,CAACc,MAAV,CAAiBC,UAFD;AAGpBV,EAAAA,KAAK,EAAEL,SAAS,CAACgB,MAAV,CAAiBD,UAHJ;AAIpBR,EAAAA,YAAY,EAAEP,SAAS,CAACgB,MAAV,CAAiBD,UAJX;AAKpBT,EAAAA,GAAG,EAAEN,SAAS,CAACgB,MAAV,CAAiBD;AALF,CAAtB","sourcesContent":["import React, { useState } from 'react';\nimport { Button, Card } from 'react-bootstrap';\n\nimport PropTypes from 'prop-types';\nimport { PhotoUpdateModal } from './PhotoUpdateModal';\n\nexport function PhotoCard({ albumId, id, title, url, thumbnailUrl }) {\n  const [showModal, setShowModal] = useState(false);\n  const [showTitle, setShowTitle] = useState(true);\n\n  const onClickImage = () => {\n    setShowTitle(!showTitle);\n  };\n  return (\n    <div className=\"cardContainer\" tabIndex={0} role=\"button\" onClick={onClickImage} onKeyDown={onClickImage}>\n      <div className=\"cardInner\">\n        <img className=\"cardImg\" src={url} alt=\"BigCo Inc. logo\" />\n        {showTitle && <div>{title}</div>}\n        <PhotoUpdateModal\n          show={showModal}\n          onClose={() => { setShowModal(false); }}\n          title={`${title} - Update`}\n          data={{ albumId, title, id, thumbnailUrl, url }}\n        />\n        <Button className=\"updateBtn\" variant=\"primary\" onClick={() => { setShowModal(true); }}>Update</Button>\n      </div>\n\n    </div>\n  );\n}\n\nPhotoCard.propTypes = {\n  albumId: PropTypes.number.isRequired,\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  thumbnailUrl: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}