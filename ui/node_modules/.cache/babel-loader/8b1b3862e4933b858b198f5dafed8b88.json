{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05D8\\u05DC\\\\Desktop\\\\dotnet-react-web-socket-main\\\\factory-control\\\\ui\\\\src\\\\components\\\\PhotoCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { PhotoUpdateModal } from './PhotoUpdateModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function PhotoCard(_ref) {\n  _s();\n\n  let {\n    albumId,\n    id,\n    title,\n    url,\n    thumbnailUrl,\n    type\n  } = _ref;\n  const [showModal, setShowModal] = useState(false);\n  const [showTitle, setShowTitle] = useState(true);\n\n  const onClickImage = () => {\n    setShowTitle(!showTitle);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cardContainer\",\n    tabIndex: 0,\n    role: \"button\",\n    onClick: onClickImage,\n    onKeyDown: onClickImage,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${type === 'first' ? 'cardInnerFirst' : 'cardInnerNotFirst'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"cardImg\",\n          src: url,\n          alt: \"BigCo Inc. logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cardTextContainer\",\n        children: [showTitle && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cardTitle\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 25\n        }, this), showTitle && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cardDescription\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(PhotoUpdateModal, {\n          show: showModal,\n          onClose: () => {\n            setShowModal(false);\n          },\n          title: `${title} - Update`,\n          data: {\n            albumId,\n            title,\n            id,\n            thumbnailUrl,\n            url\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"updateBtn\",\n          variant: \"primary\",\n          onClick: () => {\n            setShowModal(true);\n          },\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PhotoCard, \"GLArsTXLOIPQkQalmB2OkH4pfE8=\");\n\n_c = PhotoCard;\nPhotoCard.propTypes = {\n  albumId: PropTypes.number.isRequired,\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  thumbnailUrl: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"PhotoCard\");","map":{"version":3,"sources":["C:/Users/טל/Desktop/dotnet-react-web-socket-main/factory-control/ui/src/components/PhotoCard.js"],"names":["React","useState","Button","PropTypes","PhotoUpdateModal","PhotoCard","albumId","id","title","url","thumbnailUrl","type","showModal","setShowModal","showTitle","setShowTitle","onClickImage","propTypes","number","isRequired","string"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Button } from 'react-bootstrap';\n\nimport PropTypes from 'prop-types';\nimport { PhotoUpdateModal } from './PhotoUpdateModal';\n\nexport function PhotoCard({ albumId, id, title, url, thumbnailUrl, type }) {\n  const [showModal, setShowModal] = useState(false);\n  const [showTitle, setShowTitle] = useState(true);\n\n  const onClickImage = () => {\n    setShowTitle(!showTitle);\n  };\n  return (\n    <div className=\"cardContainer\" tabIndex={0} role=\"button\" onClick={onClickImage} onKeyDown={onClickImage}>\n      <div className={`${type === 'first' ? 'cardInnerFirst' : 'cardInnerNotFirst'}`}>\n        <div>\n          <img className=\"cardImg\" src={url} alt=\"BigCo Inc. logo\" />\n        </div>\n        <div className=\"cardTextContainer\">\n          {showTitle && <div className=\"cardTitle\">{title}</div>}\n          {showTitle && <div className=\"cardDescription\">{title}</div>}\n          <PhotoUpdateModal\n            show={showModal}\n            onClose={() => { setShowModal(false); }}\n            title={`${title} - Update`}\n            data={{ albumId, title, id, thumbnailUrl, url }}\n          />\n          <Button className=\"updateBtn\" variant=\"primary\" onClick={() => { setShowModal(true); }}>Update</Button>\n        </div>\n      </div>\n\n    </div>\n  );\n}\n\nPhotoCard.propTypes = {\n  albumId: PropTypes.number.isRequired,\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  thumbnailUrl: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}