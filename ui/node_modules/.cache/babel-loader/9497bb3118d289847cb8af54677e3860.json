{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05D8\\u05DC\\\\Desktop\\\\dotnet-react-web-socket-main\\\\factory-control\\\\ui\\\\src\\\\components\\\\FactoryCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button, Card } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faIndustry } from '@fortawesome/free-solid-svg-icons';\nimport { FactoryUpdateModal } from './FactoryUpdateModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function FactoryCard(_ref) {\n  _s();\n\n  let {\n    id,\n    name,\n    state,\n    message\n  } = _ref;\n  const [showModal, setShowModal] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: '18rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          as: \"div\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex flex-row justify-content-center align-items-center\",\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              color: state ? 'green' : 'red',\n              icon: faIndustry,\n              size: \"5x\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n            className: \"mb-2 text-muted\",\n            children: state ? 'Everything all right!' : message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n        className: \"text-muted\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: () => {\n            setShowModal(true);\n          },\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FactoryUpdateModal, {\n      show: showModal,\n      onClose: () => {\n        setShowModal(false);\n      },\n      title: `${name} - Update`,\n      data: {\n        status: state,\n        message,\n        id,\n        name\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(FactoryCard, \"uVlnG5KLfXemZk5i5Fl+Cg356FU=\");\n\n_c = FactoryCard;\nFactoryCard.propTypes = {\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  state: PropTypes.bool,\n  message: PropTypes.string\n};\nFactoryCard.defaultProps = {\n  message: 'İşler tıkırında!',\n  state: false\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"FactoryCard\");","map":{"version":3,"sources":["C:/Users/טל/Desktop/dotnet-react-web-socket-main/factory-control/ui/src/components/FactoryCard.js"],"names":["React","useState","Button","Card","PropTypes","FontAwesomeIcon","faIndustry","FactoryUpdateModal","FactoryCard","id","name","state","message","showModal","setShowModal","width","status","propTypes","number","isRequired","string","bool","defaultProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,iBAA7B;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,UAAT,QAA2B,mCAA3B;AACA,SAASC,kBAAT,QAAmC,sBAAnC;;;AAEA,OAAO,SAASC,WAAT,OAAmD;AAAA;;AAAA,MAA9B;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,IAAN;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA;AAAnB,GAA8B;AACxD,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,KAAD,CAA1C;AAEA,sBACE;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEc,QAAAA,KAAK,EAAE;AAAT,OAAb;AAAA,8BACE,QAAC,IAAD,CAAM,IAAN;AAAA,gCACE,QAAC,IAAD,CAAM,KAAN;AAAA,oBAAaL;AAAb;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD,CAAM,IAAN;AAAW,UAAA,EAAE,EAAC,KAAd;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,2DAAf;AAAA,mCACE,QAAC,eAAD;AAAiB,cAAA,KAAK,EAAEC,KAAK,GAAG,OAAH,GAAa,KAA1C;AAAiD,cAAA,IAAI,EAAEL,UAAvD;AAAmE,cAAA,IAAI,EAAC;AAAxE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE,QAAC,IAAD,CAAM,QAAN;AAAe,YAAA,SAAS,EAAC,iBAAzB;AAAA,sBAA4CK,KAAK,GAAG,uBAAH,GAA6BC;AAA9E;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAWE,QAAC,IAAD,CAAM,MAAN;AAAa,QAAA,SAAS,EAAC,YAAvB;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,SAAhB;AAA0B,UAAA,OAAO,EAAE,MAAM;AAAEE,YAAAA,YAAY,CAAC,IAAD,CAAZ;AAAqB,WAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAgBE,QAAC,kBAAD;AACE,MAAA,IAAI,EAAED,SADR;AAEE,MAAA,OAAO,EAAE,MAAM;AAAEC,QAAAA,YAAY,CAAC,KAAD,CAAZ;AAAsB,OAFzC;AAGE,MAAA,KAAK,EAAG,GAAEJ,IAAK,WAHjB;AAIE,MAAA,IAAI,EAAE;AAAEM,QAAAA,MAAM,EAAEL,KAAV;AAAiBC,QAAAA,OAAjB;AAA0BH,QAAAA,EAA1B;AAA8BC,QAAAA;AAA9B;AAJR;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA,kBADF;AAyBD;;GA5BeF,W;;KAAAA,W;AA8BhBA,WAAW,CAACS,SAAZ,GAAwB;AACtBR,EAAAA,EAAE,EAAEL,SAAS,CAACc,MAAV,CAAiBC,UADC;AAEtBT,EAAAA,IAAI,EAAEN,SAAS,CAACgB,MAAV,CAAiBD,UAFD;AAGtBR,EAAAA,KAAK,EAAEP,SAAS,CAACiB,IAHK;AAItBT,EAAAA,OAAO,EAAER,SAAS,CAACgB;AAJG,CAAxB;AAOAZ,WAAW,CAACc,YAAZ,GAA2B;AACzBV,EAAAA,OAAO,EAAE,kBADgB;AAEzBD,EAAAA,KAAK,EAAE;AAFkB,CAA3B","sourcesContent":["import React, { useState } from 'react';\nimport { Button, Card } from 'react-bootstrap';\n\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faIndustry } from '@fortawesome/free-solid-svg-icons';\nimport { FactoryUpdateModal } from './FactoryUpdateModal';\n\nexport function FactoryCard({ id, name, state, message }) {\n  const [showModal, setShowModal] = useState(false);\n\n  return (\n    <>\n      <Card style={{ width: '18rem' }}>\n        <Card.Body>\n          <Card.Title>{name}</Card.Title>\n          <Card.Text as=\"div\">\n            <div className=\"d-flex flex-row justify-content-center align-items-center\">\n              <FontAwesomeIcon color={state ? 'green' : 'red'} icon={faIndustry} size=\"5x\" />\n            </div>\n            <br />\n            <Card.Subtitle className=\"mb-2 text-muted\">{state ? 'Everything all right!' : message}</Card.Subtitle>\n          </Card.Text>\n        </Card.Body>\n        <Card.Footer className=\"text-muted\">\n          <Button variant=\"primary\" onClick={() => { setShowModal(true); }}>Update</Button>\n        </Card.Footer>\n      </Card>\n      <FactoryUpdateModal\n        show={showModal}\n        onClose={() => { setShowModal(false); }}\n        title={`${name} - Update`}\n        data={{ status: state, message, id, name }}\n      />\n    </>\n  );\n}\n\nFactoryCard.propTypes = {\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  state: PropTypes.bool,\n  message: PropTypes.string,\n};\n\nFactoryCard.defaultProps = {\n  message: 'İşler tıkırında!',\n  state: false,\n};\n"]},"metadata":{},"sourceType":"module"}