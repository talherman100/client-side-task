{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05D8\\u05DC\\\\Desktop\\\\dotnet-react-web-socket-main\\\\factory-control\\\\ui\\\\src\\\\components\\\\WebSocketMonitoring.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { Alert, Container, Row, Col, Button } from 'react-bootstrap';\nimport { BaseConfig } from '../config/AppConfig';\nimport { WebSocketContext } from '../context/WebSocket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StateAlerts = {\n  CONNECTING: /*#__PURE__*/_jsxDEV(Alert, {\n    variant: \"info\",\n    children: \"Connecting...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 15\n  }, this),\n  OPEN: /*#__PURE__*/_jsxDEV(Alert, {\n    variant: \"success\",\n    children: \"Connection established!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this),\n  CLOSING: /*#__PURE__*/_jsxDEV(Alert, {\n    variant: \"warning\",\n    children: \"Connection is closing...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 12\n  }, this),\n  CLOSED: /*#__PURE__*/_jsxDEV(Alert, {\n    variant: \"danger\",\n    children: \"Connection is closed!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 11\n  }, this),\n  NOTCONNECTED: /*#__PURE__*/_jsxDEV(Alert, {\n    variant: \"secondary\",\n    children: \"Not connected yet!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 17\n  }, this)\n};\nexport function WebSocketMonitoring() {\n  _s();\n\n  const {\n    wsState,\n    connectWs,\n    closeWs\n  } = useContext(WebSocketContext);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-100 d-flex flex-row justify-content-center align-items-center\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stickyTop\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Nanox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"topButtons\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"connectionButtons\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"success\",\n              disabled: BaseConfig.webSocketState.CLOSED !== wsState && BaseConfig.webSocketState.NOTCONNECTED !== wsState,\n              onClick: () => {\n                connectWs();\n              },\n              children: \"Start Connection\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"secondary\",\n              disabled: BaseConfig.webSocketState.OPEN !== wsState,\n              onClick: () => {\n                closeWs();\n              },\n              children: \"End Connection\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: wsState === BaseConfig.webSocketState.OPEN ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"connectionOpenBox\",\n              children: \" \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"connectionCloseBox\",\n              children: \" \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_s(WebSocketMonitoring, \"G61wqMKiVVjah/dUXVJNBdpopR4=\");\n\n_c = WebSocketMonitoring;\n\nvar _c;\n\n$RefreshReg$(_c, \"WebSocketMonitoring\");","map":{"version":3,"sources":["C:/Users/טל/Desktop/dotnet-react-web-socket-main/factory-control/ui/src/components/WebSocketMonitoring.js"],"names":["React","useContext","Alert","Container","Row","Col","Button","BaseConfig","WebSocketContext","StateAlerts","CONNECTING","OPEN","CLOSING","CLOSED","NOTCONNECTED","WebSocketMonitoring","wsState","connectWs","closeWs","webSocketState"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,KAAT,EAAgBC,SAAhB,EAA2BC,GAA3B,EAAgCC,GAAhC,EAAqCC,MAArC,QAAmD,iBAAnD;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,gBAAT,QAAiC,sBAAjC;;AAEA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,UAAU,eAAE,QAAC,KAAD;AAAO,IAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADM;AAElBC,EAAAA,IAAI,eAAE,QAAC,KAAD;AAAO,IAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFY;AAGlBC,EAAAA,OAAO,eAAE,QAAC,KAAD;AAAO,IAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHS;AAIlBC,EAAAA,MAAM,eAAE,QAAC,KAAD;AAAO,IAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJU;AAKlBC,EAAAA,YAAY,eAAE,QAAC,KAAD;AAAO,IAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALI,CAApB;AAQA,OAAO,SAASC,mBAAT,GAA+B;AAAA;;AACpC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,SAAX;AAAsBC,IAAAA;AAAtB,MAAkCjB,UAAU,CAACO,gBAAD,CAAlD;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,iEAAf;AAAA,2BACE,QAAC,SAAD;AAAA,6BAEE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,mBAAf;AAAA,oCACE,QAAC,MAAD;AACE,cAAA,OAAO,EAAC,SADV;AAEE,cAAA,QAAQ,EAAED,UAAU,CAACY,cAAX,CAA0BN,MAA1B,KAAqCG,OAArC,IAAgDT,UAAU,CAACY,cAAX,CAA0BL,YAA1B,KAA2CE,OAFvG;AAGE,cAAA,OAAO,EAAE,MAAM;AAAEC,gBAAAA,SAAS;AAAK,eAHjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAQE,QAAC,MAAD;AACE,cAAA,OAAO,EAAC,WADV;AAEE,cAAA,QAAQ,EAAEV,UAAU,CAACY,cAAX,CAA0BR,IAA1B,KAAmCK,OAF/C;AAGE,cAAA,OAAO,EAAE,MAAM;AAAEE,gBAAAA,OAAO;AAAK,eAH/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAiBE;AAAA,sBACKF,OAAO,KAAKT,UAAU,CAACY,cAAX,CAA0BR,IAAvC,gBACA;AAAK,cAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,gBAGA;AAAK,cAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,kBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqCD;;GAvCeI,mB;;KAAAA,mB","sourcesContent":["import React, { useContext } from 'react';\nimport { Alert, Container, Row, Col, Button } from 'react-bootstrap';\nimport { BaseConfig } from '../config/AppConfig';\nimport { WebSocketContext } from '../context/WebSocket';\n\nconst StateAlerts = {\n  CONNECTING: <Alert variant=\"info\">Connecting...</Alert>,\n  OPEN: <Alert variant=\"success\">Connection established!</Alert>,\n  CLOSING: <Alert variant=\"warning\">Connection is closing...</Alert>,\n  CLOSED: <Alert variant=\"danger\">Connection is closed!</Alert>,\n  NOTCONNECTED: <Alert variant=\"secondary\">Not connected yet!</Alert>,\n};\n\nexport function WebSocketMonitoring() {\n  const { wsState, connectWs, closeWs } = useContext(WebSocketContext);\n  return (\n    <div className=\"h-100 d-flex flex-row justify-content-center align-items-center\">\n      <Container>\n\n        <div className=\"stickyTop\">\n          <div>Nanox</div>\n          <div className=\"topButtons\">\n            <div className=\"connectionButtons\">\n              <Button\n                variant=\"success\"\n                disabled={BaseConfig.webSocketState.CLOSED !== wsState && BaseConfig.webSocketState.NOTCONNECTED !== wsState}\n                onClick={() => { connectWs(); }}\n              >\n                Start Connection\n              </Button>\n              <Button\n                variant=\"secondary\"\n                disabled={BaseConfig.webSocketState.OPEN !== wsState}\n                onClick={() => { closeWs(); }}\n              >\n                End Connection\n              </Button>\n            </div>\n            <div>\n              { (wsState === BaseConfig.webSocketState.OPEN) ?\n                <div className=\"connectionOpenBox\"> </div>\n                :\n                <div className=\"connectionCloseBox\"> </div>\n              }\n            </div>\n          </div>\n\n        </div>\n      </Container>\n    </div>\n\n  );\n}\n"]},"metadata":{},"sourceType":"module"}